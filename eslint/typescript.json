{
	"extends": "@alhadis/eslint-config",
	"parser": "@typescript-eslint/parser",
	"plugins": ["@typescript-eslint"],
	"rules": {
		"@typescript-eslint/adjacent-overload-signatures": 0,
		"@typescript-eslint/array-type": ["error", {"default": "array-simple"}],
		"@typescript-eslint/ban-tslint-comment": "error",
		"@typescript-eslint/ban-types": "error",
		"@typescript-eslint/class-literal-property-style": 0,
		"@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
		"@typescript-eslint/consistent-type-assertions": ["error", {
			"assertionStyle": "as",
			"objectLiteralTypeAssertions": "allow-as-parameter"
		}],
		"@typescript-eslint/consistent-type-definitions": 0,
		"@typescript-eslint/consistent-type-imports": 0,
		"@typescript-eslint/member-delimiter-style": ["error", {
			"multiline":  {"delimiter": "semi", "requireLast": true},
			"singleline": {"delimiter": "semi", "requireLast": false},
			"multilineDetection": "brackets"
		}],
		"@typescript-eslint/member-ordering": 0,
		"@typescript-eslint/method-signature-style": ["error", "property"],
		"@typescript-eslint/no-confusing-non-null-assertion": "error",
		"@typescript-eslint/no-duplicate-enum-values": "error",
		"@typescript-eslint/no-dynamic-delete": "error",
		"@typescript-eslint/no-empty-interface": ["error", {
			"allowSingleExtends": true
		}],
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-extra-non-null-assertion": "error",
		"@typescript-eslint/no-extraneous-class": 0,
		"@typescript-eslint/no-inferrable-types": ["error", {
			"ignoreParameters": true,
			"ignoreProperties": true
		}],
		"@typescript-eslint/no-invalid-void-type": ["error", {
			"allowInGenericTypeArguments": true,
			"allowAsThisParameter": true
		}],
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-namespace": ["error", {
			"allowDeclarations": false,
			"allowDefinitionFiles": true
		}],
		"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
		"@typescript-eslint/no-non-null-asserted-optional-chain": "error",
		"@typescript-eslint/no-non-null-assertion": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/no-this-alias": ["error", {
			"allowDestructuring": true,
			"allowedNames": ["context", "self"]
		}],
		"@typescript-eslint/no-type-alias": ["error", {
			"allowAliases": "in-unions-and-intersections",
			"allowCallbacks": "always",
			"allowConditionalTypes": "always",
			"allowConstructors": "never",
			"allowLiterals": "always",
			"allowMappedTypes": "always",
			"allowTupleTypes": "always",
			"allowGenerics": "always"
		}],
		"@typescript-eslint/no-unnecessary-type-constraint": "error",
		"@typescript-eslint/no-useless-empty-export": "error",
		"@typescript-eslint/no-var-requires": 0,
		"@typescript-eslint/parameter-properties": 0,
		"@typescript-eslint/prefer-as-const": "error",
		"@typescript-eslint/prefer-enum-initializers": "error",
		"@typescript-eslint/prefer-for-of": "error",
		"@typescript-eslint/prefer-function-type": 0,
		"@typescript-eslint/prefer-literal-enum-member": ["error", {
			"allowBitwiseExpressions": true
		}],
		"@typescript-eslint/prefer-namespace-keyword": "error",
		"@typescript-eslint/prefer-ts-expect-error": "error",
		"@typescript-eslint/sort-type-constituents": "error",
		"@typescript-eslint/triple-slash-reference": 0,
		"@typescript-eslint/type-annotation-spacing": ["error", {
			"before": false,
			"after": true,
			"overrides": {
				"variable": {
					"after": false,
					"before": false
				}
			}
		}],
		"@typescript-eslint/typedef": 0,
		"@typescript-eslint/unified-signatures": "error",


		"brace-style":                 "off",
		"comma-dangle":                "off",
		"comma-spacing":               "off",
		"default-param-last":          "off",
		"indent":                      "off",
		"keyword-spacing":             "off",
		"no-duplicate-imports":        "off",
		"no-loss-of-precision":        "off",
		"no-useless-constructor":      "off",
		"quotes":                      "off",
		"semi":                        "off",
		"space-before-function-paren": "off",
		"@typescript-eslint/brace-style": ["error", "stroustrup", {
			"allowSingleLine": true
		}],
		"@typescript-eslint/comma-dangle": ["error", {
			"arrays":    "always-multiline",
			"objects":   "always-multiline",
			"imports":   "always-multiline",
			"exports":   "always-multiline",
			"functions": "ignore"
		}],
		"@typescript-eslint/comma-spacing": "error",
		"@typescript-eslint/default-param-last": "error",
		"@typescript-eslint/indent": ["error", "tab", {
			"flatTernaryExpressions": true,
			"ignoreComments": true,
			"VariableDeclarator": 0,
			"SwitchCase": 1,
			"ignoredNodes": [
				"ForOfStatement > ForOfStatement",
				"ForInStatement > ForInStatement",
				"ForStatement   > ForStatement",
				"WhileStatement > WhileStatement"
			]
		}],
		"@typescript-eslint/keyword-spacing": ["error", {
			"overrides": {
				"await":   {"after": false},
				"if":      {"after": false},
				"do":      {"after": false},
				"else":    {"after": false},
				"for":     {"after": false},
				"while":   {"after": false},
				"switch":  {"after": false},
				"try":     {"after": false},
				"catch":   {"after": false},
				"finally": {"after": false},
				"with":    {"after": false}
			}
		}],
		"@typescript-eslint/no-loss-of-precision": "error",
		"@typescript-eslint/no-useless-constructor": "error",
		"@typescript-eslint/quotes": ["error", "double", {
			"avoidEscape": true
		}],
		"@typescript-eslint/semi": ["error", "always"],
		"@typescript-eslint/space-before-function-paren": ["error", {
			"named":      "never",
			"anonymous":  "never",
			"asyncArrow": "always"
		}]
	},
	"overrides": [{
		"files": ["**/*.d.ts"],
		"rules": {"@typescript-eslint/no-explicit-any": 0}
	},{
		"files": ["**/*.{ts,mts,cts,tsx}"],
		"rules": {
			"@typescript-eslint/explicit-function-return-type": ["error", {
				"allowConciseArrowFunctionExpressionsStartingWithVoid": true,
				"allowDirectConstAssertionInArrowFunctions": true,
				"allowExpressions": true,
				"allowHigherOrderFunctions": true,
				"allowTypedFunctionExpressions": true
			}],
			"@typescript-eslint/explicit-member-accessibility": ["error", {
				"accessibility": "no-public"
			}],
			"@typescript-eslint/explicit-module-boundary-types": "error"
		}
	}]
}
